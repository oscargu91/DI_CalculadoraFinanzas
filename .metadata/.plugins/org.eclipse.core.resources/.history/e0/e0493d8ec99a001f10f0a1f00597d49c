package application;

import javafx.application.Application;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.scene.Scene;
import javafx.scene.chart.PieChart;
import javafx.scene.control.*;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.*;
import javafx.stage.Stage;

public class Main extends Application {

    @Override
    public void start(Stage primaryStage) {
        try {
            BorderPane root = new BorderPane();

            // Parte superior: formulario
            GridPane formulario = new GridPane();
            formulario.setVgap(10);
            formulario.setHgap(10);

            Label titulo = new Label("Calculadora de finanzas");
            TextField nombre = new TextField();
            nombre.setPromptText("Nombre del gasto/ingreso");
            TextField cantidad = new TextField();
            cantidad.setPromptText("Cantidad");
            TextField meta = new TextField();
            meta.setPromptText("Meta financiera");

            // Nuevo campo: Autor (a llenar más adelante con el usuario logueado)
            TextField autor = new TextField();
            autor.setPromptText("Autor (automático)");
            autor.setEditable(false);  // Deshabilitado hasta que se implemente la autenticación

            ToggleGroup botones = new ToggleGroup();
            RadioButton gasto = new RadioButton("Gasto");
            RadioButton ingreso = new RadioButton("Ingreso");
            gasto.setToggleGroup(botones);
            ingreso.setToggleGroup(botones);

            Button calcular = new Button("Calcular");
            Button agregar = new Button("Agregar");

            formulario.add(titulo, 0, 0, 4, 1);
            formulario.add(nombre, 0, 1);
            formulario.add(cantidad, 1, 1);
            formulario.add(gasto, 2, 1);
            formulario.add(ingreso, 3, 1);
            formulario.add(meta, 0, 2, 1, 2);
            formulario.add(calcular, 1, 2);
            formulario.add(agregar, 2, 2);
            formulario.add(autor, 3, 2);

            // Tabla para mostrar los datos
            TableView<FinanceEntry> table = new TableView<>();
            TableColumn<FinanceEntry, String> nameColumn = new TableColumn<>("Nombre");
            nameColumn.setCellValueFactory(new PropertyValueFactory<>("name"));

            TableColumn<FinanceEntry, Double> amountColumn = new TableColumn<>("Cantidad");
            amountColumn.setCellValueFactory(new PropertyValueFactory<>("amount"));

            TableColumn<FinanceEntry, String> typeColumn = new TableColumn<>("Tipo");
            typeColumn.setCellValueFactory(new PropertyValueFactory<>("type"));

            table.getColumns().addAll(nameColumn, amountColumn, typeColumn);

            // Lista observable para la tabla
            ObservableList<FinanceEntry> financeData = FXCollections.observableArrayList();
            table.setItems(financeData);

            // Añadir funcionalidad al botón "Agregar"
            agregar.setOnAction(event -> {
                String entryName = nombre.getText();
                Double entryAmount = Double.parseDouble(cantidad.getText());
                String entryType = gasto.isSelected() ? "Gasto" : "Ingreso";
                

                financeData.add(new FinanceEntry(entryName, entryAmount, entryType));

                // Limpiar los campos después de agregar
                nombre.clear();
                cantidad.clear();
                botones.selectToggle(null);
            });

            // Datos del PieChart
            ObservableList<PieChart.Data> pieChartData = FXCollections.observableArrayList(
                new PieChart.Data("Ahorros", 40),
                new PieChart.Data("Inversiones", 50),
                new PieChart.Data("Gastos", 10)
            );

            // Crear el PieChart
            PieChart pieChart = new PieChart(pieChartData);
            pieChart.setTitle("Distribución Financiera");
            pieChart.setLegendVisible(false);

            // Organizar los elementos en un HBox
            HBox contenidoInferior = new HBox();
            contenidoInferior.setSpacing(20);
            contenidoInferior.getChildren().addAll(table, pieChart);

            // Añadir los componentes al BorderPane
            root.setTop(formulario);
            root.setCenter(new Separator());
            root.setBottom(contenidoInferior);

            // Crear la escena
            Scene scene = new Scene(root, 1000, 800);
            scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
            primaryStage.setScene(scene);
            primaryStage.show();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        launch(args);
    }
}
